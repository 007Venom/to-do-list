{"version":3,"sources":["components/Todoform.js","components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Todoform","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","onClick","Todolist","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAkDeA,MA/Cf,SAAkBC,GAAQ,IAAD,EACEC,mBAASD,EAAME,KAAKF,EAAME,KAAKC,MAAM,KADvC,mBACdC,EADc,KACRC,EADQ,KAGfC,EAASC,iBAAO,MAEtBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAa,SAAAC,GACfP,EAASO,EAAEC,OAAOV,QActB,OACI,0BAAMW,UAAU,YAAYC,SAZb,SAAAH,GACfA,EAAEI,iBAEDhB,EAAMe,SAAS,CACXE,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBC,KAAKjB,IAITC,EAAS,OAILL,EAAME,KACP,oCACA,2BAAOoB,KAAK,OAAOC,YAAY,aAAapB,MAAOC,EACnDoB,KAAK,OAAOV,UAAU,kBAAkBW,SAAUd,EAClDe,IAAKpB,IACL,4BAAQQ,UAAU,oBAAlB,WAII,oCACJ,2BAAOQ,KAAK,OAAOC,YAAY,aAAapB,MAAOC,EACnDoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAC7Ce,IAAKpB,IACL,4BAAQQ,UAAU,eAAlB,eCJGa,MAjCf,YAA2D,IAA5CC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,aAAaC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WAAa,EACjC9B,mBAAS,CAC1BgB,GAAG,KACHd,MAAM,KAH4C,mBAC/CD,EAD+C,KAC1C8B,EAD0C,KActD,OAAG9B,EAAKe,GACG,kBAAC,EAAD,CAAUf,KAAMA,EAAMa,SATd,SAAAZ,GACf4B,EAAW7B,EAAKe,GAAGd,GACnB6B,EAAQ,CACJf,GAAG,KACHd,MAAM,SAQPyB,EAAMK,KAAI,SAACC,EAAKC,GAAN,OACb,yBAAKrB,UAAWoB,EAAKE,WAAW,oBAAoB,WAAYC,IAAKF,GACjE,yBAAKE,IAAKH,EAAKjB,GAAIqB,QAAS,kBAAIT,EAAaK,EAAKjB,MAC7CiB,EAAKb,MAEV,yBAAKP,UAAU,SACX,kBAAC,IAAD,CAAmBwB,QAAS,kBAAIR,EAAWI,EAAKjB,KAChDH,UAAU,gBACV,kBAAC,IAAD,CAAQwB,QAAS,kBAAIN,EAAQ,CAACf,GAAGiB,EAAKjB,GAAGd,MAAM+B,EAAKb,QACpDP,UAAU,oBCiBXyB,MA9Cf,WAAqB,IAAD,EACOtC,mBAAS,IADhB,mBACT2B,EADS,KACHY,EADG,KAqChB,OACI,yBAAK1B,UAAU,YACX,yDACA,kBAAC,EAAD,CAAUC,SArCJ,SAAAmB,GACV,GAAIA,EAAKb,OAAQ,QAAQoB,KAAKP,EAAKb,MAAnC,CAIJ,IAAMqB,EAAS,CAACR,GAAF,mBAAUN,IAExBY,EAASE,OA+BD,kBAAC,EAAD,CAAMd,MAAOA,EAAOC,aAdT,SAAAZ,GACf,IAAI0B,EAAaf,EAAMK,KAAI,SAAAC,GAIvB,OAHGA,EAAKjB,KAAKA,IACTiB,EAAKE,YAAYF,EAAKE,YAEnBF,KAEXM,EAASG,IAO2Cb,WA3BvC,SAAAb,GACb,IAAM2B,EAAU,YAAIhB,GAAOiB,QAAO,SAAAX,GAAI,OAAEA,EAAKjB,KAAKA,KAClDuB,EAASI,IAyBmEb,WAtB/D,SAACe,EAAOC,GACjBA,EAAS1B,OAAQ,QAAQoB,KAAKM,EAAS1B,OAI3CmB,GAAS,SAAAQ,GAAI,OAAEA,EAAKf,KAAI,SAAAgB,GAAI,OAAGA,EAAKhC,IAAI6B,EAAOC,EAASE,aCVjDC,MAXf,WACE,OACE,yBAAKpC,UAAU,WAEhB,kBAAC,EAAD,QCNHqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.778103ff.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\n\n\nfunction Todoform(props) {\n    const [input,setInput]=useState(props.edit?props.edit.value:\" \")\n\n    const inputRef=useRef(null)\n\n    useEffect(()=>{\n        inputRef.current.focus()\n    })\n\n    const handleChange=e=>{\n        setInput(e.target.value);\n    };\n\n    const handleSubmit=e=>{\n        e.preventDefault();\n\n         props.onSubmit({\n             id:Math.floor(Math.random()*10000),\n             text:input\n\n        \n         })\n         setInput(\" \")\n    }\n    return(\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit?(\n            <>\n            <input type=\"text\" placeholder=\"Add a todo\" value={input}\n            name=\"text\" className=\"todo-input edit\" onChange={handleChange}\n            ref={inputRef}/>\n            <button className=\"todo-button edit\">Update</button>\n            </>\n            ): \n            (\n                <>\n            <input type=\"text\" placeholder=\"Add a todo\" value={input}\n            name=\"text\" className=\"todo-input\" onChange={handleChange}\n            ref={inputRef}/>\n            <button className=\"todo-button\">Add todo</button>\n            </>\n            )}\n            \n        </form>\n    )\n}\n\nexport default Todoform\n","import React,{useState} from 'react'\n\nimport {RiCloseCircleLine} from \"react-icons/ri\"\nimport {TiEdit} from \"react-icons/ti\"\nimport Todoform from './Todoform'\nfunction Todo({todos,completeTodo,removeTodo,updateTodo}) {\n    const [edit,setEdit]=useState({\n        id:null,\n        value:\"\"\n    })\n\n    const submitUpdate=value=>{\n        updateTodo(edit.id,value)\n        setEdit({\n            id:null,\n            value:\" \"\n        })\n    }\n\n    if(edit.id){\n        return <Todoform edit={edit} onSubmit={submitUpdate} />\n    }\n\n    return todos.map((todo,index)=>(\n        <div className={todo.isComplete?'todo-row complete':'todo-row'} key={index}>\n            <div key={todo.id} onClick={()=>completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className=\"icons\">\n                <RiCloseCircleLine onClick={()=>removeTodo(todo.id)}\n                className=\"delete-icon\"/>\n                <TiEdit onClick={()=>setEdit({id:todo.id,value:todo.text})}\n                className=\"edit-icon\"/>\n            </div>\n            </div>\n    ))\n}\n\nexport default Todo\n","import React,{useState} from 'react'\nimport Todo from './Todo.js';\nimport TodoForm from \"./Todoform\"\nfunction Todolist() {\n    const [todos,setTodos]=useState([]);\n\n    const addTodo=todo=>{\n        if(!todo.text || /^\\s*$/.test(todo.text)){\n        return ;\n    }\n\n    const newTodos=[todo,...todos]\n\n    setTodos(newTodos)\n   \n    };\n\n    const removeTodo=id=>{\n        const removeArr=[...todos].filter(todo=>todo.id!==id)\n        setTodos(removeArr)\n    }\n\n    const updateTodo=(todoId,newValue)=>{\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\n            return ;\n        }\n\n        setTodos(prev=>prev.map(item=>(item.id==todoId?newValue:item)))\n    }\n\n    const completeTodo=id=>{\n        let updatedTodos=todos.map(todo=>{\n            if(todo.id===id){\n                todo.isComplete=!todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    }\n\n    return (\n        <div className=\"todo-app\">\n            <h1>Whats the plan for today?</h1>\n            <TodoForm onSubmit={addTodo}/>\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\n        </div>\n    )\n}\n\nexport default Todolist\n","import React from 'react';\nimport './App.css';\nimport Todolist from './components/Todolist';\n\n\n\nfunction App() {\n  return (\n    <div className=\"toDoApp\">\n   \n   <Todolist />\n\n    </div>\n  )\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}